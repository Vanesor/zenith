-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.ai_assignment_generations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  template_id uuid,
  generated_assignment_id uuid,
  source_file_url text NOT NULL,
  generation_prompt text,
  ai_model_used character varying,
  generation_status character varying DEFAULT 'pending'::character varying,
  questions_extracted integer DEFAULT 0,
  questions_created integer DEFAULT 0,
  processing_log jsonb DEFAULT '[]'::jsonb,
  error_details text,
  generated_by uuid,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  completed_at timestamp with time zone,
  CONSTRAINT ai_assignment_generations_pkey PRIMARY KEY (id),
  CONSTRAINT fk_ai_generations_template FOREIGN KEY (template_id) REFERENCES public.assignment_templates(id),
  CONSTRAINT fk_ai_generations_assignment FOREIGN KEY (generated_assignment_id) REFERENCES public.assignments(id),
  CONSTRAINT fk_ai_generations_user FOREIGN KEY (generated_by) REFERENCES public.users(id)
);
CREATE TABLE public.announcements (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  title character varying NOT NULL,
  content text NOT NULL,
  author_id uuid,
  club_id character varying,
  priority character varying DEFAULT 'normal'::character varying,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT announcements_pkey PRIMARY KEY (id)
);
CREATE TABLE public.assignment_attempts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  assignment_id uuid NOT NULL,
  user_id uuid NOT NULL,
  attempt_number integer NOT NULL DEFAULT 1,
  start_time timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  end_time timestamp with time zone,
  time_spent integer DEFAULT 0,
  score integer DEFAULT 0,
  max_score integer DEFAULT 0,
  percentage numeric DEFAULT 0,
  is_passing boolean DEFAULT false,
  answers jsonb DEFAULT '{}'::jsonb,
  graded_answers jsonb DEFAULT '{}'::jsonb,
  violations jsonb DEFAULT '[]'::jsonb,
  status character varying DEFAULT 'in_progress'::character varying,
  submitted_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  is_fullscreen boolean DEFAULT false,
  auto_save_data jsonb DEFAULT '{}'::jsonb,
  window_violations integer DEFAULT 0,
  last_auto_save timestamp with time zone,
  browser_info jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT assignment_attempts_pkey PRIMARY KEY (id),
  CONSTRAINT assignment_attempts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT assignment_attempts_assignment_id_fkey FOREIGN KEY (assignment_id) REFERENCES public.assignments(id)
);
CREATE TABLE public.assignment_audit_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  assignment_id uuid NOT NULL,
  user_id uuid NOT NULL,
  attempt_id uuid,
  action character varying NOT NULL,
  details jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT assignment_audit_log_pkey PRIMARY KEY (id),
  CONSTRAINT assignment_audit_log_attempt_id_fkey FOREIGN KEY (attempt_id) REFERENCES public.assignment_attempts(id),
  CONSTRAINT assignment_audit_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT assignment_audit_log_assignment_id_fkey FOREIGN KEY (assignment_id) REFERENCES public.assignments(id)
);
CREATE TABLE public.assignment_questions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  assignment_id uuid NOT NULL,
  question_text text NOT NULL,
  question_type character varying NOT NULL CHECK (question_type::text = ANY (ARRAY['single_choice'::character varying::text, 'multiple_choice'::character varying::text, 'multi_select'::character varying::text, 'coding'::character varying::text, 'essay'::character varying::text, 'true_false'::character varying::text, 'integer'::character varying::text])),
  marks integer NOT NULL DEFAULT 1,
  time_limit integer,
  code_language character varying,
  code_template text,
  test_cases jsonb,
  expected_output text,
  solution text,
  ordering integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  type character varying,
  title character varying,
  description text,
  options jsonb,
  correct_answer jsonb,
  points integer DEFAULT 1,
  question_order integer DEFAULT 0,
  starter_code text,
  integer_min numeric,
  integer_max numeric,
  integer_step numeric DEFAULT 1,
  explanation text,
  allowed_languages jsonb DEFAULT '[]'::jsonb,
  allow_any_language boolean DEFAULT false,
  question_image_url text,
  question_image_alt text,
  question_images jsonb DEFAULT '[]'::jsonb,
  answer_images jsonb DEFAULT '[]'::jsonb,
  CONSTRAINT assignment_questions_pkey PRIMARY KEY (id),
  CONSTRAINT fk_assignment FOREIGN KEY (assignment_id) REFERENCES public.assignments(id)
);
CREATE TABLE public.assignment_submissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  assignment_id uuid,
  user_id uuid,
  submission_text text,
  file_url text,
  submitted_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  status character varying DEFAULT 'submitted'::character varying,
  grade integer,
  feedback text,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  violation_count integer DEFAULT 0,
  time_spent integer,
  auto_submitted boolean DEFAULT false,
  ip_address character varying,
  user_agent text,
  total_score integer DEFAULT 0,
  CONSTRAINT assignment_submissions_pkey PRIMARY KEY (id),
  CONSTRAINT assignment_submissions_assignment_id_fkey FOREIGN KEY (assignment_id) REFERENCES public.assignments(id),
  CONSTRAINT assignment_submissions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.assignment_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  template_file_url text NOT NULL,
  template_type character varying NOT NULL,
  category character varying,
  subject character varying,
  difficulty_level character varying,
  estimated_questions integer,
  created_by uuid,
  is_active boolean DEFAULT true,
  usage_count integer DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT assignment_templates_pkey PRIMARY KEY (id),
  CONSTRAINT fk_assignment_templates_created_by FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.assignment_violations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  submission_id uuid NOT NULL,
  violation_type character varying NOT NULL,
  occurred_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  details jsonb,
  CONSTRAINT assignment_violations_pkey PRIMARY KEY (id),
  CONSTRAINT fk_submission FOREIGN KEY (submission_id) REFERENCES public.assignment_submissions(id)
);
CREATE TABLE public.assignments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  title character varying NOT NULL,
  description text NOT NULL,
  club_id character varying,
  created_by uuid,
  due_date timestamp with time zone NOT NULL,
  max_points integer DEFAULT 100,
  instructions text,
  status character varying DEFAULT 'active'::character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  assignment_type character varying DEFAULT 'regular'::character varying CHECK (assignment_type::text = ANY (ARRAY['regular'::character varying, 'objective'::character varying, 'coding'::character varying, 'essay'::character varying]::text[])),
  target_audience character varying DEFAULT 'club'::character varying CHECK (target_audience::text = ANY (ARRAY['club'::character varying, 'all_clubs'::character varying, 'specific_clubs'::character varying]::text[])),
  target_clubs ARRAY DEFAULT '{}'::character varying[],
  time_limit integer,
  allow_navigation boolean DEFAULT true,
  passing_score integer DEFAULT 60,
  is_proctored boolean DEFAULT false,
  shuffle_questions boolean DEFAULT false,
  allow_calculator boolean DEFAULT true,
  show_results boolean DEFAULT true,
  allow_review boolean DEFAULT true,
  shuffle_options boolean DEFAULT false,
  max_attempts integer DEFAULT 1,
  is_published boolean DEFAULT false,
  coding_instructions text DEFAULT 'Write your code solution. Make sure to test your code thoroughly before submitting.'::text,
  objective_instructions text DEFAULT 'Choose the correct answer(s) for each question. For multi-select questions, you may choose multiple options.'::text,
  mixed_instructions text DEFAULT 'This assignment contains different types of questions. Read each question carefully and provide appropriate answers.'::text,
  essay_instructions text DEFAULT 'Provide detailed written responses to the essay questions. Ensure your answers are well-structured and comprehensive.'::text,
  require_fullscreen boolean DEFAULT false,
  auto_submit_on_violation boolean DEFAULT false,
  max_violations integer DEFAULT 3,
  code_editor_settings jsonb DEFAULT '{"theme": "vs-dark", "autoSave": true, "fontSize": 14, "wordWrap": true, "autoSaveInterval": 30000}'::jsonb,
  require_camera boolean DEFAULT false,
  require_microphone boolean DEFAULT false,
  require_face_verification boolean DEFAULT false,
  proctoring_settings jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT assignments_pkey PRIMARY KEY (id),
  CONSTRAINT assignments_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT assignments_club_id_fkey FOREIGN KEY (club_id) REFERENCES public.clubs(id)
);
CREATE TABLE public.chat_attachments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  message_id uuid,
  room_id uuid NOT NULL,
  filename character varying NOT NULL,
  original_filename character varying NOT NULL,
  file_path character varying NOT NULL,
  file_type character varying NOT NULL,
  file_size integer NOT NULL,
  mime_type character varying,
  encryption_key text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT chat_attachments_pkey PRIMARY KEY (id),
  CONSTRAINT chat_attachments_message_id_fkey FOREIGN KEY (message_id) REFERENCES public.chat_messages(id)
);
CREATE TABLE public.chat_invitations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  room_id uuid NOT NULL,
  inviter_id uuid NOT NULL,
  invitee_email character varying NOT NULL,
  invitation_token character varying NOT NULL UNIQUE,
  message text,
  status character varying DEFAULT 'pending'::character varying,
  expires_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  accepted_at timestamp with time zone,
  CONSTRAINT chat_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT chat_invitations_inviter_id_fkey FOREIGN KEY (inviter_id) REFERENCES public.users(id),
  CONSTRAINT chat_invitations_room_id_fkey FOREIGN KEY (room_id) REFERENCES public.chat_rooms(id)
);
CREATE TABLE public.chat_messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  room_id uuid,
  user_id uuid,
  message text NOT NULL,
  message_type character varying DEFAULT 'text'::character varying,
  file_url text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  reply_to_message_id uuid,
  is_edited boolean DEFAULT false,
  reply_to uuid,
  sender_id uuid,
  content text,
  is_encrypted boolean DEFAULT false,
  updated_at timestamp with time zone,
  attachments jsonb DEFAULT '[]'::jsonb,
  message_images jsonb DEFAULT '[]'::jsonb,
  reactions jsonb DEFAULT '{}'::jsonb,
  thread_id uuid,
  CONSTRAINT chat_messages_pkey PRIMARY KEY (id),
  CONSTRAINT chat_messages_reply_to_fkey FOREIGN KEY (reply_to) REFERENCES public.chat_messages(id),
  CONSTRAINT chat_messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT fk_chat_messages_thread FOREIGN KEY (thread_id) REFERENCES public.chat_messages(id),
  CONSTRAINT chat_messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT chat_messages_room_id_fkey FOREIGN KEY (room_id) REFERENCES public.chat_rooms(id),
  CONSTRAINT chat_messages_reply_to_message_id_fkey FOREIGN KEY (reply_to_message_id) REFERENCES public.chat_messages(id)
);
CREATE TABLE public.chat_room_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  chat_room_id uuid,
  user_id uuid,
  joined_at timestamp with time zone DEFAULT now(),
  role character varying DEFAULT 'member'::character varying,
  user_email character varying,
  CONSTRAINT chat_room_members_pkey PRIMARY KEY (id),
  CONSTRAINT chat_room_members_chat_room_id_fkey FOREIGN KEY (chat_room_id) REFERENCES public.chat_rooms(id),
  CONSTRAINT chat_room_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.chat_rooms (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  club_id character varying,
  type character varying DEFAULT 'public'::character varying,
  created_by uuid,
  members ARRAY DEFAULT '{}'::uuid[],
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  room_type character varying DEFAULT 'public'::character varying,
  encryption_enabled boolean DEFAULT false,
  cover_image_url text,
  room_images jsonb DEFAULT '[]'::jsonb,
  room_settings jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT chat_rooms_pkey PRIMARY KEY (id),
  CONSTRAINT chat_rooms_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT chat_rooms_club_id_fkey FOREIGN KEY (club_id) REFERENCES public.clubs(id)
);
CREATE TABLE public.club_members (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  club_id uuid NOT NULL,
  is_leader boolean DEFAULT false,
  joined_at timestamp with time zone DEFAULT now(),
  CONSTRAINT club_members_pkey PRIMARY KEY (id)
);
CREATE TABLE public.clubs (
  id character varying NOT NULL,
  name character varying NOT NULL,
  type character varying NOT NULL,
  description text NOT NULL,
  long_description text,
  icon character varying NOT NULL,
  color character varying NOT NULL,
  coordinator_id uuid,
  co_coordinator_id uuid,
  secretary_id uuid,
  media_id uuid,
  guidelines text,
  meeting_schedule jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  logo_url text,
  banner_image_url text,
  club_images jsonb DEFAULT '[]'::jsonb,
  CONSTRAINT clubs_pkey PRIMARY KEY (id),
  CONSTRAINT fk_clubs_secretary FOREIGN KEY (secretary_id) REFERENCES public.users(id),
  CONSTRAINT fk_clubs_media FOREIGN KEY (media_id) REFERENCES public.users(id),
  CONSTRAINT fk_clubs_co_coordinator FOREIGN KEY (co_coordinator_id) REFERENCES public.users(id),
  CONSTRAINT fk_clubs_coordinator FOREIGN KEY (coordinator_id) REFERENCES public.users(id)
);
CREATE TABLE public.code_results (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  response_id uuid NOT NULL,
  test_case_index integer,
  passed boolean,
  stdout text,
  stderr text,
  execution_time integer,
  memory_used integer,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT code_results_pkey PRIMARY KEY (id),
  CONSTRAINT fk_response FOREIGN KEY (response_id) REFERENCES public.question_responses(id)
);
CREATE TABLE public.coding_submissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  question_response_id uuid NOT NULL,
  language character varying NOT NULL,
  code text NOT NULL,
  is_final boolean DEFAULT false,
  execution_result jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT coding_submissions_pkey PRIMARY KEY (id),
  CONSTRAINT coding_submissions_question_response_id_fkey FOREIGN KEY (question_response_id) REFERENCES public.question_responses(id)
);
CREATE TABLE public.comments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  post_id uuid,
  author_id uuid,
  content text NOT NULL,
  parent_id uuid,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  likes_count integer DEFAULT 0,
  CONSTRAINT comments_pkey PRIMARY KEY (id),
  CONSTRAINT comments_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT comments_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.comments(id),
  CONSTRAINT comments_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.users(id)
);
CREATE TABLE public.discussion_replies (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  discussion_id uuid,
  author_id uuid,
  content text NOT NULL,
  parent_id uuid,
  likes_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT discussion_replies_pkey PRIMARY KEY (id),
  CONSTRAINT discussion_replies_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.users(id),
  CONSTRAINT discussion_replies_discussion_id_fkey FOREIGN KEY (discussion_id) REFERENCES public.discussions(id),
  CONSTRAINT discussion_replies_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.discussion_replies(id)
);
CREATE TABLE public.discussions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  title character varying NOT NULL,
  description text,
  author_id uuid,
  club_id character varying,
  tags ARRAY DEFAULT '{}'::text[],
  is_locked boolean DEFAULT false,
  is_pinned boolean DEFAULT false,
  views_count integer DEFAULT 0,
  replies_count integer DEFAULT 0,
  last_activity timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT discussions_pkey PRIMARY KEY (id),
  CONSTRAINT discussions_club_id_fkey FOREIGN KEY (club_id) REFERENCES public.clubs(id),
  CONSTRAINT discussions_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.users(id)
);
CREATE TABLE public.event_attendees (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  event_id uuid,
  user_id uuid,
  registered_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  attendance_status character varying DEFAULT 'registered'::character varying,
  CONSTRAINT event_attendees_pkey PRIMARY KEY (id),
  CONSTRAINT event_attendees_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT event_attendees_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(id)
);
CREATE TABLE public.event_registrations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  event_id uuid,
  user_id uuid,
  status character varying DEFAULT 'registered'::character varying,
  registration_data jsonb,
  registered_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT event_registrations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.events (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  title character varying NOT NULL,
  description text NOT NULL,
  club_id character varying,
  created_by uuid,
  event_date date NOT NULL,
  event_time time without time zone NOT NULL,
  location character varying NOT NULL,
  max_attendees integer,
  status character varying DEFAULT 'upcoming'::character varying,
  image_url text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  event_images jsonb DEFAULT '[]'::jsonb,
  banner_image_url text,
  gallery_images jsonb DEFAULT '[]'::jsonb,
  CONSTRAINT events_pkey PRIMARY KEY (id),
  CONSTRAINT events_club_id_fkey FOREIGN KEY (club_id) REFERENCES public.clubs(id),
  CONSTRAINT events_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.likes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  post_id uuid,
  user_id uuid,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT likes_pkey PRIMARY KEY (id),
  CONSTRAINT likes_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT likes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.media_files (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  filename character varying NOT NULL,
  original_filename character varying NOT NULL,
  file_size integer NOT NULL,
  mime_type character varying NOT NULL,
  file_url text NOT NULL,
  thumbnail_url text,
  alt_text text,
  description text,
  uploaded_by uuid,
  upload_context character varying,
  upload_reference_id uuid,
  is_public boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT media_files_pkey PRIMARY KEY (id),
  CONSTRAINT fk_media_files_uploaded_by FOREIGN KEY (uploaded_by) REFERENCES public.users(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  chat_room_id uuid NOT NULL,
  user_id uuid NOT NULL,
  content text NOT NULL,
  attachment_url text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notifications (
  id integer NOT NULL DEFAULT nextval('notifications_id_seq'::regclass),
  user_id uuid NOT NULL,
  type character varying NOT NULL,
  title text,
  message text NOT NULL,
  link text,
  read boolean DEFAULT false,
  delivery_method character varying DEFAULT 'in-app'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  sent_by character varying,
  club_id character varying,
  email_sent boolean DEFAULT false,
  email_sent_at timestamp without time zone,
  CONSTRAINT notifications_pkey PRIMARY KEY (id)
);
CREATE TABLE public.posts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  title character varying NOT NULL,
  content text NOT NULL,
  author_id uuid,
  club_id character varying,
  category character varying,
  tags ARRAY DEFAULT '{}'::text[],
  image_url text,
  is_pinned boolean DEFAULT false,
  is_locked boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  edited boolean DEFAULT false,
  edited_by uuid,
  is_announcement boolean DEFAULT false,
  view_count integer DEFAULT 0,
  likes_count integer DEFAULT 0,
  comments_count integer DEFAULT 0,
  post_images jsonb DEFAULT '[]'::jsonb,
  featured_image_url text,
  attachments jsonb DEFAULT '[]'::jsonb,
  CONSTRAINT posts_pkey PRIMARY KEY (id),
  CONSTRAINT posts_edited_by_fkey FOREIGN KEY (edited_by) REFERENCES public.users(id),
  CONSTRAINT posts_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.users(id),
  CONSTRAINT posts_club_id_fkey FOREIGN KEY (club_id) REFERENCES public.clubs(id)
);
CREATE TABLE public.proctoring_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  assignment_id uuid NOT NULL,
  user_id uuid NOT NULL,
  session_start timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  session_end timestamp with time zone,
  camera_enabled boolean DEFAULT false,
  microphone_enabled boolean DEFAULT false,
  face_verified boolean DEFAULT false,
  violations jsonb DEFAULT '[]'::jsonb,
  screenshots jsonb DEFAULT '[]'::jsonb,
  system_info jsonb DEFAULT '{}'::jsonb,
  session_data jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT proctoring_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT fk_proctoring_sessions_assignment FOREIGN KEY (assignment_id) REFERENCES public.assignments(id),
  CONSTRAINT fk_proctoring_sessions_user FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.question_media (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  question_id uuid NOT NULL,
  media_file_id uuid NOT NULL,
  media_type character varying NOT NULL,
  display_order integer DEFAULT 0,
  is_primary boolean DEFAULT false,
  caption text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT question_media_pkey PRIMARY KEY (id),
  CONSTRAINT fk_question_media_question FOREIGN KEY (question_id) REFERENCES public.assignment_questions(id),
  CONSTRAINT fk_question_media_file FOREIGN KEY (media_file_id) REFERENCES public.media_files(id)
);
CREATE TABLE public.question_options (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  question_id uuid NOT NULL,
  option_text text NOT NULL,
  is_correct boolean DEFAULT false,
  ordering integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT question_options_pkey PRIMARY KEY (id),
  CONSTRAINT fk_question FOREIGN KEY (question_id) REFERENCES public.assignment_questions(id)
);
CREATE TABLE public.question_responses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  submission_id uuid NOT NULL,
  question_id uuid NOT NULL,
  selected_options ARRAY,
  code_answer text,
  essay_answer text,
  is_correct boolean,
  score integer DEFAULT 0,
  time_spent integer,
  feedback text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  selected_language character varying,
  last_auto_save timestamp with time zone,
  attempt_history jsonb DEFAULT '[]'::jsonb,
  CONSTRAINT question_responses_pkey PRIMARY KEY (id),
  CONSTRAINT fk_question FOREIGN KEY (question_id) REFERENCES public.assignment_questions(id),
  CONSTRAINT fk_submission FOREIGN KEY (submission_id) REFERENCES public.assignment_submissions(id)
);
CREATE TABLE public.sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  token character varying NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  last_active_at timestamp with time zone DEFAULT now(),
  user_agent text,
  ip_address character varying,
  CONSTRAINT sessions_pkey PRIMARY KEY (id),
  CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_badges (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  badge_name character varying NOT NULL,
  badge_description text,
  badge_icon character varying,
  earned_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_badges_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  email character varying NOT NULL UNIQUE,
  password_hash character varying NOT NULL,
  name character varying NOT NULL,
  username character varying,
  avatar text,
  role character varying NOT NULL DEFAULT 'student'::character varying,
  club_id character varying,
  bio text,
  social_links jsonb DEFAULT '{}'::jsonb,
  preferences jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  profile_image_url text,
  profile_images jsonb DEFAULT '[]'::jsonb,
  verification_photo_url text,
  phone_number character varying,
  date_of_birth date,
  address text,
  emergency_contact jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_club_id_fkey FOREIGN KEY (club_id) REFERENCES public.clubs(id)
);